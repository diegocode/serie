control digital 
usando lineas de handshaking del port serie
=======================================================================
v.0.4 (beta)
=======================================================================

requiere pyserial 3.0.1+


=======================================================================
Testeado en:
=======================================================================

ASus K53E i3* con:
 - mint 17.1 kde 
 - win 7 Home - 64b

Netbook LG110* atom N270 con:
 - win xp 32b home

Netbook Asus1005HA* atom N270 con:
 - debian 8.2 32b

Sempron 2200+ Mother M7VIG400 (serie on board y *) con:
 - win xp pro 32b

*con adaptador usb-232 HXSP-2108D (con CI CP2108)

=======================================================================
uso:
=======================================================================

Luego de iniciar el programa, se comienza a mostrar el estado de las 
entradas (CD, RI, DSR, CTS) y las salidas (DTR, RTS)

Introduciendo comandos y presionando <enter> se puede modificar el 
comportamiento en forma interactiva.

Los comandos interactivos disponibles:

d - se detiene el refresco periódico del estado de e / s
r - reinicia el refresco periódico del estado de e / s
s - muestra el estado de las e / s
sr - set RTS
rr - reset RTS
sd - set DTR
rd - reset DTR
x - finaliza el programa


=======================================================================
documentación y ejemplos
=======================================================================

En la carpeta docs se proporcionan circuitos, ideas y ejemplos de uso, 
además de documentación sobre el puerto serie: el hardware y cómo 
usarlo desde linux.


=======================================================================
historial de versiones
=======================================================================

0.4 - 2016-02-13 -
    Agregado: GUI 

0.3 - 2016-01-30 -
    Agregado: 
        Registro de eventos
        Archivo de configuración (ver detalle abajo)
    
    Corregido:
        Manejo correcto de Ctrl+C
        

0.2 - 2016-01-29 -
    Agregado: 
        Modo automático - procesa scripts (ver detalle abajo)

0.1 - 2016-01-28 - 
    Versión inicial de prueba y desarrollo
    En línea de comandos. 
    Solo modo manual 
    No procesa argumentos
    tscan, port, nombres, formatos: hardcoded
    En modo interactivo soporta: d, r, s, x, sr, rr, sd, rd


=======================================================================
estructura de archivos de scripts
=======================================================================

Aun no se permiten comentarios.

# estado nro. 0 (inicial) 
# salidas: DTR: 1 RTS: 0 
# Si CD = 1, RI = 0, DSR = 1, CTS = 0 => va a estado 3
# Si CD = 1, RI = 0, DSR = 1, CTS = 1 => va a estado 2
# Cualquier otra combinación: permanece en estado 0 
000,10,1010:003,1011:002

# estado nro. 2  
# salidas: DTR: 0 RTS: 1 
# Si CD = 0, RI = 0, DSR = 0, CTS = 1 => va a estado 0
# Si CD = 1, RI = 0, DSR = 0, CTS = 0 => va a estado 3
# Cualquier otra combinación: permanece en estado 2 
002,01,0001:0,1000:003

=======================================================================
estructura de archivos de configuración
=======================================================================

Aun no se permiten comentarios.
El siguiente es un ejemplo válido y probado

tscan = 2
puerto = /dev/ttyUSB0
archivo_estados = prueba.scd
estado_inicial = 002
archivo_registro=eventos.log
registro_solo_cambios=1
registro_fecha=1
registro_hora=0
registro_separador=;


tscan= cada cuánto tiempo refresca la información de entadas y estados 
puerto= el port serie a utilizar
archivo_estados= nombre del archivo de script
estado_inicial= cuál de los estados cargados se toma como inicial
archivo_registro= nombre del archivo de registro de eventos
registro_solo_cambios= solo se guarda en el archivo de registro de eventos
                       una línea si hubo algún cambio en entradas y salidas
registro_fecha=, registro_hora= si se incluye o no en cada línea del archivo
                                de eventos la fecha y/o hora 
registro_separador= caracter utilizado para separar los campos del archivo
                    de registro de eventos


